// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// colSums_wt_cpp
NumericVector colSums_wt_cpp(NumericMatrix mat, NumericVector vec_wt);
RcppExport SEXP _ProSpect_colSums_wt_cpp(SEXP matSEXP, SEXP vec_wtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_wt(vec_wtSEXP);
    rcpp_result_gen = Rcpp::wrap(colSums_wt_cpp(mat, vec_wt));
    return rcpp_result_gen;
END_RCPP
}
// mat_vec_mult_col
NumericMatrix mat_vec_mult_col(NumericMatrix mat, NumericVector vec, int col_lim);
RcppExport SEXP _ProSpect_mat_vec_mult_col(SEXP matSEXP, SEXP vecSEXP, SEXP col_limSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< int >::type col_lim(col_limSEXP);
    rcpp_result_gen = Rcpp::wrap(mat_vec_mult_col(mat, vec, col_lim));
    return rcpp_result_gen;
END_RCPP
}
// mat_vec_mult_row
void mat_vec_mult_row(NumericMatrix mat, NumericVector vec, int row_lim);
RcppExport SEXP _ProSpect_mat_vec_mult_row(SEXP matSEXP, SEXP vecSEXP, SEXP row_limSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< int >::type row_lim(row_limSEXP);
    mat_vec_mult_row(mat, vec, row_lim);
    return R_NilValue;
END_RCPP
}
// vec_add_cpp
void vec_add_cpp(NumericVector vec_base, NumericVector vec_add);
RcppExport SEXP _ProSpect_vec_add_cpp(SEXP vec_baseSEXP, SEXP vec_addSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec_base(vec_baseSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_add(vec_addSEXP);
    vec_add_cpp(vec_base, vec_add);
    return R_NilValue;
END_RCPP
}
// vec_mult_cpp
void vec_mult_cpp(NumericVector vec_base, NumericVector vec_mult);
RcppExport SEXP _ProSpect_vec_mult_cpp(SEXP vec_baseSEXP, SEXP vec_multSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec_base(vec_baseSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_mult(vec_multSEXP);
    vec_mult_cpp(vec_base, vec_mult);
    return R_NilValue;
END_RCPP
}
// wave_rebin_cpp
NumericVector wave_rebin_cpp(NumericVector wave, NumericVector wave_bin, NumericVector wave_bin_lo, NumericVector wave_bin_hi, bool logbin);
RcppExport SEXP _ProSpect_wave_rebin_cpp(SEXP waveSEXP, SEXP wave_binSEXP, SEXP wave_bin_loSEXP, SEXP wave_bin_hiSEXP, SEXP logbinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type wave(waveSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type wave_bin(wave_binSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type wave_bin_lo(wave_bin_loSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type wave_bin_hi(wave_bin_hiSEXP);
    Rcpp::traits::input_parameter< bool >::type logbin(logbinSEXP);
    rcpp_result_gen = Rcpp::wrap(wave_rebin_cpp(wave, wave_bin, wave_bin_lo, wave_bin_hi, logbin));
    return rcpp_result_gen;
END_RCPP
}
// spec_rebin_cpp
NumericVector spec_rebin_cpp(NumericVector wave_in, NumericVector flux_in, NumericVector wave_out, bool logbin_in, bool logbin_out);
RcppExport SEXP _ProSpect_spec_rebin_cpp(SEXP wave_inSEXP, SEXP flux_inSEXP, SEXP wave_outSEXP, SEXP logbin_inSEXP, SEXP logbin_outSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type wave_in(wave_inSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type flux_in(flux_inSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type wave_out(wave_outSEXP);
    Rcpp::traits::input_parameter< bool >::type logbin_in(logbin_inSEXP);
    Rcpp::traits::input_parameter< bool >::type logbin_out(logbin_outSEXP);
    rcpp_result_gen = Rcpp::wrap(spec_rebin_cpp(wave_in, flux_in, wave_out, logbin_in, logbin_out));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ProSpect_colSums_wt_cpp", (DL_FUNC) &_ProSpect_colSums_wt_cpp, 2},
    {"_ProSpect_mat_vec_mult_col", (DL_FUNC) &_ProSpect_mat_vec_mult_col, 3},
    {"_ProSpect_mat_vec_mult_row", (DL_FUNC) &_ProSpect_mat_vec_mult_row, 3},
    {"_ProSpect_vec_add_cpp", (DL_FUNC) &_ProSpect_vec_add_cpp, 2},
    {"_ProSpect_vec_mult_cpp", (DL_FUNC) &_ProSpect_vec_mult_cpp, 2},
    {"_ProSpect_wave_rebin_cpp", (DL_FUNC) &_ProSpect_wave_rebin_cpp, 5},
    {"_ProSpect_spec_rebin_cpp", (DL_FUNC) &_ProSpect_spec_rebin_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ProSpect(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
