// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// spec_rebin_cpp
NumericVector spec_rebin_cpp(NumericVector wave_in, NumericVector flux_in, NumericVector wave_out, bool logbin_in, bool logbin_out);
RcppExport SEXP _ProSpect_spec_rebin_cpp(SEXP wave_inSEXP, SEXP flux_inSEXP, SEXP wave_outSEXP, SEXP logbin_inSEXP, SEXP logbin_outSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type wave_in(wave_inSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type flux_in(flux_inSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type wave_out(wave_outSEXP);
    Rcpp::traits::input_parameter< bool >::type logbin_in(logbin_inSEXP);
    Rcpp::traits::input_parameter< bool >::type logbin_out(logbin_outSEXP);
    rcpp_result_gen = Rcpp::wrap(spec_rebin_cpp(wave_in, flux_in, wave_out, logbin_in, logbin_out));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ProSpect_spec_rebin_cpp", (DL_FUNC) &_ProSpect_spec_rebin_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ProSpect(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
